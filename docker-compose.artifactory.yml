version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/mongo:5.0
    container_name: catalyst-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: catalyst_admin_pass
      MONGO_INITDB_DATABASE: catalyst_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - catalyst-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.artifactory
    container_name: catalyst-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=mongodb://admin:catalyst_admin_pass@mongodb:27017
      - DB_NAME=catalyst_db
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - RABBITMQ_URL=amqp://catalyst:catalyst_queue_2025@rabbitmq:5672/catalyst
      - EMERGENT_LLM_KEY=sk-emergent-b14E29723DeDaF2A74
      - DEFAULT_LLM_PROVIDER=emergent
      - DEFAULT_LLM_MODEL=claude-3-7-sonnet-20250219
      - CORS_ORIGINS=*
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_TASKS=5
      - AGENT_TIMEOUT=300
      - ENABLE_COST_OPTIMIZER=true
      - ENABLE_LEARNING_SERVICE=true
      - ENABLE_CONTEXT_MANAGER=true
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - catalyst-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend.artifactory
      args:
        REACT_APP_BACKEND_URL: http://localhost:8001
    container_name: catalyst-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - catalyst-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # ============================================
  # Phase 4 Infrastructure Services
  # ============================================

  # Redis for Caching & Cost Optimization
  redis:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/redis:7-alpine
    container_name: catalyst-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - catalyst-network

  # Qdrant Vector Database for Learning Service
  qdrant:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/qdrant/qdrant:latest
    container_name: catalyst-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/rabbitmq:3-management-alpine
    container_name: catalyst-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=catalyst
      - RABBITMQ_DEFAULT_PASS=catalyst_queue_2025
      - RABBITMQ_DEFAULT_VHOST=catalyst
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

networks:
  catalyst-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  rabbitmq_data:
    driver: local
