version: '3.8'

services:
  # ============================================
  # Core Data Layer
  # ============================================
  
  # PostgreSQL for state management (event-driven mode only)
  postgres:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/postgres:15-alpine
    container_name: catalyst-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: catalyst_state
      POSTGRES_USER: catalyst
      POSTGRES_PASSWORD: catalyst_state_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalyst"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

  # MongoDB Database
  mongodb:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/mongo:5.0
    container_name: catalyst-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: catalyst_admin_pass
      MONGO_INITDB_DATABASE: catalyst_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - catalyst-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.artifactory
    container_name: catalyst-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=mongodb://admin:catalyst_admin_pass@mongodb:27017
      - POSTGRES_URL=postgresql://catalyst:catalyst_state_2025@postgres:5432/catalyst_state
      - DB_NAME=catalyst_db
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - RABBITMQ_URL=amqp://catalyst:catalyst_queue_2025@rabbitmq:5672/catalyst
      - EMERGENT_LLM_KEY=${EMERGENT_LLM_KEY:-sk-emergent-b14E29723DeDaF2A74}
      - DEFAULT_LLM_PROVIDER=emergent
      - DEFAULT_LLM_MODEL=claude-3-7-sonnet-20250219
      - CORS_ORIGINS=*
      - LOG_LEVEL=INFO
      - MAX_CONCURRENT_TASKS=5
      - AGENT_TIMEOUT=300
      - ENABLE_COST_OPTIMIZER=true
      - ENABLE_LEARNING_SERVICE=true
      - ENABLE_CONTEXT_MANAGER=true
      - PYTHONUNBUFFERED=1
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
      - CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
      - PREVIEW_DOMAIN=localhost
      - TRAEFIK_ENABLED=false
      # LLM Observability
      - LANGFUSE_PUBLIC_KEY=
      - LANGFUSE_SECRET_KEY=
      - LANGFUSE_HOST=http://langfuse:3000
      - LANGCHAIN_TRACING_V2=false
      - LANGCHAIN_API_KEY=
      - LANGCHAIN_PROJECT=catalyst
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Docker-in-Docker for previews
      - ./repos:/app/repos                          # Git repositories
      - ./artifacts:/app/artifacts                  # Build/test artifacts
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
      rabbitmq:
        condition: service_started
      # traefik:
      #   condition: service_started  # Optional - only if Traefik enabled
    networks:
      - catalyst-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend.artifactory
      args:
        REACT_APP_BACKEND_URL: http://localhost:8001
    container_name: catalyst-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - catalyst-network

  # ============================================
  # Phase 4 Infrastructure Services
  # ============================================

  # Redis for Caching & Cost Optimization
  redis:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/redis:7-alpine
    container_name: catalyst-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - catalyst-network

  # Qdrant Vector Database for Learning Service
  qdrant:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/qdrant/qdrant:latest
    container_name: catalyst-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    networks:
      - catalyst-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/rabbitmq:3-management-alpine
    container_name: catalyst-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=catalyst
      - RABBITMQ_DEFAULT_PASS=catalyst_queue_2025
      - RABBITMQ_DEFAULT_VHOST=catalyst
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq-init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

  # ============================================
  # Routing & Preview Management (OPTIONAL)
  # ============================================
  
  # Traefik for dynamic preview URL routing
  # Comment out if image not available in Artifactory
  # Preview deployments will use fallback URLs (http://localhost:port)
  #
  # traefik:
  #   image: artifactory.devtools.syd.c1.macquarie.com:9996/traefik:v2.10
  #   container_name: catalyst-traefik
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"      # HTTP
  #     - "8080:8080"  # Dashboard
  #   command:
  #     - "--api.insecure=true"
  #     - "--api.dashboard=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--providers.docker.network=catalyst-network"
  #     - "--entrypoints.web.address=:80"
  #     - "--log.level=INFO"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - catalyst-network

  # ============================================
  # LLM Observability (Docker Desktop Only)
  # ============================================
  
  # Langfuse - Self-hosted LLM observability
  langfuse-db:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/postgres:15-alpine
    container_name: catalyst-langfuse-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: langfuse
      POSTGRES_USER: langfuse
      POSTGRES_PASSWORD: langfuse_pass_2025
    volumes:
      - langfuse_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U langfuse"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

  # ClickHouse for Langfuse v3+ analytics
  langfuse-clickhouse:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/clickhouse/clickhouse-server:latest
    container_name: catalyst-langfuse-clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_DB: langfuse
      CLICKHOUSE_USER: langfuse
      CLICKHOUSE_PASSWORD: langfuse_clickhouse_2025
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - catalyst-network

  langfuse:
    image: artifactory.devtools.syd.c1.macquarie.com:9996/langfuse/langfuse:latest
    container_name: catalyst-langfuse
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgresql://langfuse:langfuse_pass_2025@langfuse-db:5432/langfuse
      - CLICKHOUSE_URL=http://langfuse:langfuse_clickhouse_2025@langfuse-clickhouse:8123/langfuse
      - CLICKHOUSE_MIGRATION_URL=clickhouse://langfuse:langfuse_clickhouse_2025@langfuse-clickhouse:9000/langfuse
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=catalyst_langfuse_secret_key_2025_change_in_production
      - SALT=catalyst_langfuse_salt_key_2025
    depends_on:
      langfuse-db:
        condition: service_healthy
      langfuse-clickhouse:
        condition: service_healthy
    networks:
      - catalyst-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/public/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s  # Increased for migration

networks:
  catalyst-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  langfuse_db_data:
    driver: local
  langfuse_clickhouse_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local
  rabbitmq_data:
    driver: local
