version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: catalyst-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-catalyst_admin_pass}
      MONGO_INITDB_DATABASE: ${DB_NAME:-catalyst_db}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - catalyst-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Backend API (FastAPI)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: catalyst-backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-catalyst_admin_pass}@mongodb:27017
      DB_NAME: ${DB_NAME:-catalyst_db}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      EMERGENT_LLM_KEY: ${EMERGENT_LLM_KEY}
      PYTHONUNBUFFERED: 1
    ports:
      - "${BACKEND_PORT:-8001}:8001"
    volumes:
      - ./backend:/app/backend
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - catalyst-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: catalyst-frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: http://localhost:${BACKEND_PORT:-8001}
      WDS_SOCKET_PORT: 0
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - catalyst-network
    stdin_open: true
    tty: true

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  catalyst-network:
    driver: bridge