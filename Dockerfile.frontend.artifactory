# Catalyst Frontend Dockerfile - Artifactory Version (Fixed)
# Multi-stage build for optimized production image
# Build context: /app/frontend (frontend directory)

# Stage 1: Build stage
FROM artifactory.devtools.syd.c1.macquarie.com:9996/node:18-alpine as builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    && yarn --version

# Configure yarn/npm to use Artifactory registry
RUN yarn config set registry https://artifactory.devtools.syd.c1.macquarie.com:9996/artifactory/api/npm/npm-virtual/ && \
    npm config set registry https://artifactory.devtools.syd.c1.macquarie.com:9996/artifactory/api/npm/npm-virtual/ && \
    yarn config list

# Copy package files from frontend directory
COPY package.json yarn.lock ./

# Install dependencies with increased timeout and retry logic
# Now using Artifactory registry configured above
RUN yarn install --frozen-lockfile \
    --network-timeout 600000 \
    --network-concurrency 1 || \
    (echo "Retrying yarn install..." && \
     yarn cache clean && \
     yarn install --network-timeout 600000 --network-concurrency 1)

# Copy source code
COPY . ./

# Build arguments for environment variables
ARG REACT_APP_BACKEND_URL=http://localhost:8001
ENV REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}

# Build application
RUN yarn build

# Stage 2: Runtime stage with Nginx
FROM artifactory.devtools.syd.c1.macquarie.com:9996/nginx:alpine

# Copy custom nginx config from frontend directory
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Create non-root user
RUN addgroup -g 1000 catalyst && \
    adduser -D -u 1000 -G catalyst catalyst && \
    chown -R catalyst:catalyst /usr/share/nginx/html && \
    chown -R catalyst:catalyst /var/cache/nginx && \
    chown -R catalyst:catalyst /var/log/nginx && \
    touch /var/run/nginx.pid && \
    chown catalyst:catalyst /var/run/nginx.pid

USER catalyst

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
